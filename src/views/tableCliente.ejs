<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" type="image/png" href="/images/icons/favicon.ico"/>
    <title><%= title %></title>

    <!-- Custom fonts for this template -->
    <link href="/vendor/fontawesome-free/css/all.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="/css/sb-admin-2.css" rel="stylesheet">
    <style>
        .sortable-header {
            cursor: pointer;
        }
        .sortable-header:hover {
            background-color: #f8f9fc;
        }
        .sort-icon {
            margin-left: 5px;
            color: #858796;
        }
        .sort-icon.active {
            color: #4e73df;
        }
        .table-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem; /* Added margin for spacing */
        }
        .table-controls .form-group {
            margin-bottom: 0; /* Removed bottom margin for inline elements */
        }
    </style>
</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <%- include("components/sidebar.ejs") %>

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <%- include("components/topbar.ejs") %>

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <h1 class="h3 mb-2 text-gray-800">
                        <%= title %>
                    </h1>
                    <p class="mb-4">Tabella clienti e produttori </p>

                    <div class="card shadow mb-4">
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <a class="btn btn-primary" href="/addCliente" role="button">Aggiungi Cliente/Produttore</a>
                            <div class="ml-auto">
                                <input type="text" id="searchInput" class="form-control" placeholder="Cerca..." value="<%= typeof currentSearch !== 'undefined' ? currentSearch : '' %>">
                            </div>
                        </div>
                        <div class="card-body">
                            <%# Nuovo: Controlli Tabella (Limite Entry) %>
                            <div class="table-controls">
                                <div class="form-group">
                                    <label for="limitSelect" class="mr-2">Mostra entry:</label>
                                    <select id="limitSelect" class="form-control form-control-sm d-inline-block" style="width: auto;">
                                        <% allowedLimits.forEach(val => { %>
                                            <option value="<%= val %>" <%= limit == val ? 'selected' : '' %>><%= val %></option>
                                        <% }); %>
                                    </select>
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table class="table table-bordered" id="clientTable" width="100%" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <% 
                                            const baseUrl = new URL(req.protocol + '://' + req.get('host') + req.originalUrl.split('?')[0]);
                                            const currentParams = new URLSearchParams(req.url.split('?')[1] || '');
                                            // Non resettare la pagina qui, lo faremo nello script per il cambio limite e ordinamento
                                            %>
                                            <% for(const header of aheader) { %> 
                                                <% 
                                                const isCurrentSortField = currentSort === header.field;
                                                const newOrder = isCurrentSortField && currentOrder === 'asc' ? 'desc' : 'asc';
                                                const sortLinkParams = new URLSearchParams(currentParams);
                                                sortLinkParams.set('sort', header.field);
                                                sortLinkParams.set('order', newOrder);
                                                sortLinkParams.set('page', '1'); // Resetta alla prima pagina quando si cambia ordinamento
                                                const sortLink = baseUrl.pathname + '?' + sortLinkParams.toString();
                                                %>
                                                <th class="text-capitalize sortable-header" onclick="window.location.href='<%= sortLink %>'">
                                                    <%= header.name %>
                                                    <% if (isCurrentSortField) { %>
                                                        <i class="fas fa-sort-<%= currentOrder === 'asc' ? 'up' : 'down' %> sort-icon active"></i>
                                                    <% } else { %>
                                                        <i class="fas fa-sort sort-icon"></i>
                                                    <% } %>
                                                </th>
                                            <% } %>
                                            <th>Azioni</th>
                                        </tr>
                                    </thead>
                                    <tfoot>
                                        <tr>
                                            <% for(const header of aheader) { %> 
                                                <th class="text-capitalize"><%= header.name %></th>
                                            <% } %>
                                            <th>Azioni</th>
                                        </tr>
                                    </tfoot>
                                    <tbody>
                                        <% if (list && list.length > 0) { %>
                                            <% for(const cliente of list) { %> 
                                                <tr data-id="<%= cliente._id %>">
                                                    <td><%= cliente.ragioneSociale %></td> 
                                                    <td class="text-capitalize"><%= cliente.tipologia %></td>
                                                    <td>
                                                        <button class="btn btn-danger btn-circle btn-sm delete-btn" data-id="<%= cliente._id %>" title="Elimina">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </td> 
                                                </tr>
                                            <% } %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="<%= aheader.length + 1 %>" class="text-center">Nessun cliente o produttore trovato.</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                            <%- include("components/pagination.ejs", {
                                currentPage: currentPage,
                                totalPages: totalPages,
                                limit: limit,
                                totalItems: totalItems,
                                list: list,
                                currentSearch: typeof currentSearch !== 'undefined' ? currentSearch : '',
                                currentSort: typeof currentSort !== 'undefined' ? currentSort : '',
                                currentOrder: typeof currentOrder !== 'undefined' ? currentOrder : 'asc',
                                req: req // Pass req to pagination to build URLs
                            }) %>
                        </div>
                    </div>

                </div>
                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->
    <!-- Delete Modal-->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Vuoi eliminare questo elemento?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Ã—</span>
                </button>
            </div>
            <div class="modal-body">Clicca su "Elimina" per confermare.</div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Annulla</button>
                <button class="btn btn-danger delete-confirm-btn" type="button" data-id="">
                    Elimina
                </button>
            </div>

        </div>
    </div>
    </div>

            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; Robertales&Skipper98 2023</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Bootstrap core JavaScript-->
    <script src="/vendor/jquery/jquery.min.js"></script>
    <script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="/js/sb-admin-2.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
          const deleteButtons = document.querySelectorAll(".delete-btn");
          const deleteModal = document.getElementById("deleteModal");
          const deleteConfirmButton = deleteModal.querySelector(".delete-confirm-btn");
      
          deleteButtons.forEach((button) => {
            button.addEventListener("click", function () {
              const elementId = button.getAttribute("data-id");
              const row = button.closest("tr");
              const ragioneSociale = row.querySelector("td:first-child").textContent;
              deleteModal.querySelector(".modal-title").textContent = `Vuoi eliminare "${ragioneSociale}"?`;
              deleteConfirmButton.setAttribute("data-id", elementId);
              $('#deleteModal').modal('show');
            });
          });
      
          deleteConfirmButton.addEventListener("click", function () {
            const elementId = deleteConfirmButton.getAttribute("data-id");
            
            fetch(`/eliminaCliente/${elementId}`, {
              method: "DELETE",
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => { throw new Error(err.message || "Errore server") });
                }
                return response.json();
            })
            .then((data) => {
                if (data.message === "Elemento eliminato con successo") {
                    const params = new URLSearchParams(window.location.search);
                    window.location.href = window.location.pathname + "?" + params.toString();
                } else {
                    console.error("Errore durante l'eliminazione:", data.message);
                    alert("Errore durante l'eliminazione: " + data.message);
                }
            })
            .catch((error) => {
                console.error("Errore fetch durante l'eliminazione:", error);
                alert("Errore fetch durante l'eliminazione: " + error.message);
            });
      
            $('#deleteModal').modal('hide');
          });

          const searchInput = document.getElementById("searchInput");
          let searchTimeout;
          searchInput.addEventListener("input", function () {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                const searchValue = searchInput.value.trim();
                const currentUrl = new URL(window.location.href);
                currentUrl.searchParams.set("page", "1"); 
                if (searchValue) {
                    currentUrl.searchParams.set("search", searchValue);
                } else {
                    currentUrl.searchParams.delete("search");
                }
                window.location.href = currentUrl.toString();
            }, 500); 
          });

          // Nuovo: Logica per la selezione del limite di entry
          const limitSelect = document.getElementById("limitSelect");
          limitSelect.addEventListener("change", function() {
            const selectedLimit = this.value;
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set("limit", selectedLimit);
            currentUrl.searchParams.set("page", "1"); // Resetta alla prima pagina quando si cambia il limite
            window.location.href = currentUrl.toString();
          });
        });
      </script>
</body>

</html>